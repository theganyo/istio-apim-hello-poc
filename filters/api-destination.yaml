apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: api-destination
spec:
  filters:
  - listenerMatch:
      listenerProtocol: HTTP
    insertPosition:
      index: BEFORE
      relativeTo: envoy.router
    filterName: envoy.lua
    filterType: HTTP
    filterConfig:
      inlineCode: |
        -- api-destination --

        local destinations = {
          -- definition, gateway, operation, authority, path
          {"helloworld", "helloworld-gold", "SayHello", "httpbin.com", "/headers"},
          {"helloworld", "helloworld-silver", "SayHello", "helloworld.vs", "/hello"},
        }            
          
        function envoy_on_request(request_handle)
          headers = request_handle:headers()
          
          definition = headers:get("api.definition")
          gateway = headers:get("api.gateway")
          operation = headers:get("api.operation")
          
          for i, class in pairs(destinations) do
            if class[1] == definition and class[2] == gateway and class[3] == operation then
              headers:replace(":authority", class[4])
              headers:replace(":path", class[5])
              
              request_handle:logCritical("set :authority: "..headers:get(":authority"))
              request_handle:logCritical("set :path     : "..headers:get(":path"))
            end
          end                        
        end
        -- api-destination --
